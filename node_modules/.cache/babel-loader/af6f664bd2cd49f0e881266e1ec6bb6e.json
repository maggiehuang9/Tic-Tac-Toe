{"ast":null,"code":"import _slicedToArray from \"/Users/maggie/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maggie/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/maggie/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","status","Game","document","getElementById","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nfunction Square(props) {\n    return (\n\t    <button className=\"square\" onClick={props.onClick}>\n\t\t{props.value}\n    </button>\n\t    );\n}\n\nclass Board extends React.Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    squares: Array(9).fill(null),\n\t    xIsNext: true,\n\t};\n    }\n    handleClick(i) {\n\tconst squares = this.state.squares.slice();\n\tif (calculateWinner(squares) || squares[i]) {\n\t    return;\n\t}\n\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\tthis.setState({\n\t\tsquares: squares,\n\t\txIsNext: !this.state.xIsNext,\n\t});\n    }\n    renderSquare(i) {\n\treturn (\n      <Square\n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i)}\n      />\n\t\t);\n    }\n   \n    render() {\n\tconst winner = calculateWinner(this.state.squares);\n\tlet status;\n\tif (winner) {\n\t    status = 'Winner: ' + winner;\n\t} else {\n\t    status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t}\n\treturn (\n      <div>\n      <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n\t    {this.renderSquare(3)}\n\t    {this.renderSquare(4)}\n\t    {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n\t    {this.renderSquare(6)}\n\t    {this.renderSquare(7)}\n\t    {this.renderSquare(8)}\n        </div>\n      </div>\n\t\t);\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n\treturn (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n      <div>{/* status */}</div>\n      <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n\t\t);\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n\t\t<Game />,\n\t\tdocument.getElementById('root')\n\t\t);\nfunction calculateWinner(squares) {\n  const lines = [\n\t\t [0, 1, 2],\n\t\t [3, 4, 5],\n\t\t [6, 7, 8],\n\t\t [0, 3, 6],\n\t\t [1, 4, 7],\n\t\t [2, 5, 8],\n\t\t [0, 4, 8],\n\t\t [2, 4, 6],\n\t\t ];\n  for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t  return squares[a];\n      }\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}