{"ast":null,"code":"import _slicedToArray from \"/Users/maggie/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maggie/my-app/src/index.js\";\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 3\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/maggie/my-app/src/index.js"],"names":["Square","props","onClick","value","Board","React","Component","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","xIsNext","handleClick","current","length","slice","calculateWinner","setState","concat","winner","status","ReactDOM","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["function Square(props) {\n    return (\n\t    <button className=\"square\" onClick={props.onClick}>\n\t\t{props.value}\n    </button>\n\t    );\n}\n\nclass Board extends React.Component {\n    renderSquare(i) {\n\treturn (\n      <Square\n      value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)}\n      />\n\t\t);\n    }\n\n    render() {\n\treturn (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n\t    {this.renderSquare(3)}\n\t    {this.renderSquare(4)}\n\t    {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n\t    {this.renderSquare(6)}\n\t    {this.renderSquare(7)}\n\t    {this.renderSquare(8)}\n        </div>\n      </div>\n\t\t);\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    history: [{\n\t\t    squares: Array(9).fill(null)\n\t\t}],\n\t    xIsNext: true\n\t};\n    }\n\n    handleClick(i) {\n\tconst history = this.state.history;\n\tconst current = history[history.length - 1];\n\tconst squares = current.squares.slice();\n\tif (calculateWinner(squares) || squares[i]) {\n\t    return;\n\t}\n\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\tthis.setState({\n\t\thistory: history.concat([{\n\t\t\t    squares: squares\n\t\t\t\t}]),\n\t\t    xIsNext: !this.state.xIsNext,\n\t\t    });\n    }\n  \n    render() {\n\tconst history = this.state.history;\n\tconst current = history[history.length - 1];\n\tconst winner = calculateWinner(current.squares);\n\n\tlet status;\n\tif (winner) {\n\t    status = 'Winner: ' + winner;\n\t} else {\n\t    status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t}\n\n\treturn (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n      squares={current.squares}\n      onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n      <div>{status}</div>\n      <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n\t\t);\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n\t\t<Game />,\n\t\tdocument.getElementById('root')\n\t\t);\n\nfunction calculateWinner(squares) {\n  const lines = [\n\t\t [0, 1, 2],\n\t\t [3, 4, 5],\n\t\t [6, 7, 8],\n\t\t [0, 3, 6],\n\t\t [1, 4, 7],\n\t\t [2, 5, 8],\n\t\t [0, 4, 8],\n\t\t [2, 4, 6],\n\t\t ];\n  for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t  return squares[a];\n      }\n  }\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}